const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports.config = {
 name: "shoti",
 version: "1.0.2",
 hasPermission: 0,
 credits: "Shaon Ahmed",
 description: "Send a random shoti (TikTok short video)",
 commandCategory: "media",
 usages: "",
 cooldowns: 5,
};

module.exports.run = async function ({ api, event }) {
 try {
const apis = await axios.get('https://raw.githubusercontent.com/shaonproject/Shaon/main/api.json')
 const Shaon = apis.data.alldl

 const res = await axios.get(`${Shaon}/api/shoti`);
 let data = res.data;

 // ‡¶Ø‡¶¶‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∞‡ßá ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ ‡¶®‡¶æ‡¶ì
 if (Array.isArray(data)) {
 if (data.length === 0) {
 return api.sendMessage("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§", event.threadID, event.messageID);
 }
 data = data[Math.floor(Math.random() * data.length)];
 }

 const videoUrl = data.shotiurl || data.url;
 if (!videoUrl) {
 return api.sendMessage("‚ùå API did not return a video URL.", event.threadID, event.messageID);
 }

 const caption =
 `üé¨ ùóßùó∂ùòÅùóπùó≤: ${data.title || "N/A"}\n` +
 `üë§ ùó®ùòÄùó≤ùóø: @${data.username || "N/A"}\n` +
 `üìõ ùó°ùó∂ùó∞ùó∏ùóªùóÆùó∫ùó≤: ${data.nickname || "N/A"}\n` +
 `üåç ùó•ùó≤ùó¥ùó∂ùóºùóª: ${data.region || "N/A"}\n` +
 `‚è±Ô∏è ùóóùòÇùóøùóÆùòÅùó∂ùóºùóª: ${data.duration || "N/A"} sec\n` +
 `üëë ùó¢ùóΩùó≤ùóøùóÆùòÅùóºùóø: ${data.operator || "N/A"}`;

 const fileName = `shoti_${Date.now()}.mp4`;
 const filePath = path.join(__dirname, "cache", fileName);

 const writer = fs.createWriteStream(filePath);
 const videoStream = await axios.get(videoUrl, { responseType: "stream" });
 videoStream.data.pipe(writer);

 writer.on("finish", () => {
 api.sendMessage(
 {
 body: caption,
 attachment: fs.createReadStream(filePath),
 },
 event.threadID,
 () => {
 fs.unlinkSync(filePath);
 },
 event.messageID
 );
 });

 writer.on("error", (err) => {
 console.error("‚ùå File write error:", err);
 api.sendMessage("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", event.threadID, event.messageID);
 });
 } catch (err) {
 console.error("‚ùå Shoti API error:", err.message);
 api.sendMessage("‚ùå ‡¶∂‡¶ü‡ßÄ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶™‡¶∞‡ßá ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", event.threadID, event.messageID);
 }
};
